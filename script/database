#!/bin/bash
set -euo pipefail

# somehow lets handle setting up db
function createDatabaseStatement() {
  local environment="$1"; test $environment
  local password="$2"; test $password
  cat <<-EOF
    CREATE DATABASE if not exists chamba_$environment;
    GRANT ALL PRIVILEGES ON chamba_$environment.* TO 'chamba_user_$environment'@'localhost'
    IDENTIFIED BY '$password' WITH GRANT OPTION;
EOF
}

function setupDatabase(){
  local environment="$1"; shift; test $environment
  local password="$1"; shift; test $password

  mysql -p \
        --execute="$(createDatabaseStatement $environment $password)"
}

function usage(){
  cat <<-EOF
  usage: database

  Script for initial bootstrapping of Chamba database. Set the following environment variables:

  \$CHAMBA_ENVIRONMENT: configures the environment are going to be setting up
  \$CHAMBA_PASSWORD:    the password for the chamba user that is setup for the particular environment

  Examples:

  To setup the database for test environment use:
  CHAMBA_ENVIRONMENT\=test CHAMBA_PASSWORD\=password1234 database -s

  The password you use should be recorded in the sources.test.json for chamba to be able to access
  the test database.
EOF
}

function main() {
  local OPTIND opt

  if [ $# -eq 0 ]; then
    usage
    exit 1
  fi

  while getopts "h?s" opt; do
    case $opt in
    s)
      echo "Setting up database for $CHAMBA_ENVIRONMENT environment"
      setupDatabase $CHAMBA_ENVIRONMENT $CHAMBA_PASSWORD
      exit 0
    ;;
    h)
      usage
      exit
    ;;
    *)
      usage
      exit
    ;;
    h|\?)
    	echo "Invalid option: -$OPTARG" >&2
      usage
      exit 0
    ;;
    esac
  done

  shift $(($OPTIND - 1))
}

OPTIND=1
main "$@"
